var e=Object.defineProperty,t=Object.defineProperties,n=Object.getOwnPropertyDescriptors,r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,i=(t,n,r)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r;const l=["altGlyph","altGlyphDef","altGlyphItem","animate","animateColor","animateMotion","animateTransform","animation","audio","circle","clipPath","color-profile","cursor","defs","desc","discard","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","font","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignObject","g","glyph","glyphRef","handler","hkern","image","line","linearGradient","listener","marker","mask","metadata","missing-glyph","mpath","path","pattern","polygon","polyline","prefetch","radialGradient","rect","set","solidColor","stop","svg","switch","symbol","tbreak","text","textArea","textPath","tref","tspan","unknown","use","view","vkern"];function f(e,t,n){var r;null!=(r=e._vf)[t]||(r[t]=[]);const o=e._vf[t];o.value=n,Object.defineProperty(e,t,{get:()=>o.value,set(e){o.value=e;for(let t=o.length;t--;)o[t](e)}}),e[t]=n}Object.defineProperties(Element.prototype,{_vf:{value:{}},watch:{value:function(e,t){const n=this._vf[e];var r;n?(n.push(t),(0===(r=n.value)||r)&&t(n.value)):this._vf[e]=[t]}}}),Object.defineProperty(EventTarget.prototype,"on",{value:EventTarget.prototype.addEventListener});let s=0;const c=(e,t)=>{if(t instanceof Function){e.append("");const r=e.childNodes[e.childNodes.length-1];n=e,Object.defineProperties(n,{innerHTML:{set(){}},innerText:{set(){}}});t((e=>{r.data=e.toString()}),e)}else if(t instanceof Array)for(const r of t)c(e,r);else e.append(t);var n};const p={r:function(e,f,...p){null!=f||(f={});let u,d=!1;if("string"==typeof e)l.includes(e)?(u=document.createElementNS("http://www.w3.org/2000/svg",e),d=!0):u=document.createElement(e);else{if("function"!=typeof e)throw new Error("using invalid thing used as element tag.");if((null==e?void 0:e.prototype)instanceof Element)try{u=new e}catch(v){customElements.define("default"===(m=e.name)?`custom-elem-${(s++).toString(36)}`:m.replace(/\B[A-Z]/g,"-$&").toLowerCase(),e),u=new e}else u=e((g=((e,t)=>{for(var n in t||(t={}))o.call(t,n)&&i(e,n,t[n]);if(r)for(var n of r(t))a.call(t,n)&&i(e,n,t[n]);return e})({},f),h={children:[...p]},t(g,n(h)))),p.length=0}var g,h,m;if(f)for(const t in f){const e=f[t];"class"===t?u.classList.value=e:"ref"===t?e[0][e[1]]=u:d||"style"===t||t.includes("-")?u.setAttribute(t,e):u[t]=e}return c(u,p),u},Fragment:({children:e})=>e};export{p as V,f as u};
