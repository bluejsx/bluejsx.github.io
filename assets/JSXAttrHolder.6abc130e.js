import"./vendor.71c70a4d.js";export default"import { useAttr, AttrHolder } from 'bluejsx'\n\n//takes in attributes as arguments (access to children elements via 'children' attribute)\nconst Example = ({ progValue = 0, children = null }) => {\n  //create state holder\n  const state = new AttrHolder()\n  //declare elements\n  const refs = {}\n  const progText = new Text()\n  const self = (\n    <div>\n      <button ref={[refs, 'btn']}>click</button>\n      <progress ref={[refs, 'progress']} max={100} value={progValue} />\n      {progText}%\n      {children}\n    </div>\n  )\n  const { btn, progress } = refs\n\n  //create state\n  useAttr(state, 'progValue', progValue)\n\n  // when `state.progValue` changes, run the following listener\n  state.watch('progValue', v => {\n    progress.value = v\n    progText.data = v\n  })\n\n  btn.onclick = () => {\n    if (state.progValue < 100) state.progValue += 10\n    else state.progValue = 0\n  }\n\n  // return self element\n  return self\n}\nexport default Example";
