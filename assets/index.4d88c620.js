import{V as e,u as n,W as t,a as s,b as l,c as r,d as o}from"./editor.worker.b652ba79.js";const a=[["View the Source Code of This Page","https://github.com/vanillajsx/vanillajsx.github.io"],["Document","https://github.com/vanillajsx/VanillaJSX/tree/master/doc"],["GitHub Repository","https://github.com/vanillajsx/VanillaJSX"],["Join Discussions","https://github.com/vanillajsx/VanillaJSX/discussions"]],i=()=>{const t={},s=e.r("div",{class:"menu_list_container hidden"},e.r("div",{ref:[t,"toggleButton"],id:"h-menu-button"},e.r("span",null),e.r("span",null)),e.r("div",{class:"menu-list"},a.map((n=>{const t=e.r("p",null,n[0]);return t.onclick=()=>window.open(n[1]),t}))),e.r("div",{ref:[t,"backField"],id:"backfield"})),{toggleButton:l,backField:r}=t;return n(s,"open",!1),s.watch("open",(e=>{e?s.classList.remove("hidden"):s.classList.add("hidden")})),r.onclick=()=>s.open=!1,l.onclick=()=>s.open=!s.open,s};const c=()=>e.r("header",null,e.r("div",{class:"_title_69m70_12"},"Vanilla.JSX"),e.r(i,null));let u;const d={},p=function(e,n){if(!n)return e();if(void 0===u){const e=document.createElement("link").relList;u=e&&e.supports&&e.supports("modulepreload")?"modulepreload":"preload"}return Promise.all(n.map((e=>{if(e in d)return;d[e]=!0;const n=e.endsWith(".css"),t=n?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${e}"]${t}`))return;const s=document.createElement("link");return s.rel=n?"stylesheet":u,n||(s.as="script",s.crossOrigin=""),s.href=e,document.head.appendChild(s),n?new Promise(((e,n)=>{s.addEventListener("load",e),s.addEventListener("error",n)})):void 0}))).then((()=>e()))};const h="_main_8b2wh_1";const m=()=>e.r("div",{class:`container ${h}`},(async n=>{await p((()=>import("./article.47f8741f.js")),void 0).then((t=>t.default.split("<hr>").forEach((t=>n.appendChild(e.r("section",{innerHTML:t,class:"markdown-body"})))))),await p((()=>import("./CodeSpace.5d463f7e.js").then((function(e){return e.C}))),["./assets/CodeSpace.5d463f7e.js","./assets/CodeSpace.3ae57bac.css","./assets/editor.worker.b652ba79.js"]).then((t=>{const s=t.default;n.querySelector("#example-codespace").appendChild(e.r(s,{code:"import { useAttr } from '@vanillajsx/vjsx'\n\n//takes in attributes as arguments (access to children elements via 'children' attribute)\nconst Example = ({ progValue = 0, children = null })=>{\n\n  //declare elements\n  const progress = <progress max={100} value={progValue}/>\n  const btn = <button>click</button>\n  const progText = new Text()\n  const self = (\n    <div class='t3'>\n      {btn}\n      {progress} \n      {progText}%\n      {children}\n    </div>\n  )\n\n  /*\n  below defines a property named 'progValue',\n  and when 'progValue' changes, \n  all registered listeners will be executed.\n  */\n  useAttr(self, 'progValue', progValue)\n\n  // functionalities\n  //when `self.progValue` changed, run the following listener\n  self.watch('progValue', v=>{\n    progress.value = v\n    progText.data = v\n  })\n\n  btn.onclick = () =>{\n    /*\n      below just looks assigning a value to a property,\n      however this is running getter/setter method,\n      which executes all registered listener functions via `watch` method.\n    */\n    if(self.progValue<100) self.progValue+=10\n    else self.progValue = 0\n  }\n\n  // return self element\n  return self\t\n}\nexport default Example"}))}))}));globalThis.VJSX=e,globalThis.useAttr=n,self.MonacoEnvironment={getWorker:(e,n)=>"json"===n?new t:"css"===n||"scss"===n||"less"===n?new s:"html"===n||"handlebars"===n||"razor"===n?new l:"typescript"===n||"javascript"===n?new r:new o},document.querySelector("#app").appendChild(e.r("div",null,e.r(c,null),e.r(m,null)));export{p as _};
